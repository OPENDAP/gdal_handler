dnl -*- m4 -*-
dnl Process this file with autoconf to produce a configure script.

AC_REVISION($Id$)
AC_INIT(lgdal.h)

dnl Note that multiple calls to AC_CONFIG_HEADER don't work in autoconf 2.13. 
dnl Each header must be listed in a single call. Also note two of the netcdf
dnl headers' init files don't follow the HEADER.in convention so I used the
dnl HEADER:INIT syntax of AC_CONFIG_HEADER. 1/25/2000 jhrg
dnl AC_CONFIG_HEADER(lnetcdf/ncconfig.h:lnetcdf/ncconfig.in)

AC_CONFIG_AUX_DIR(../../etc)

AC_CANONICAL_HOST

AC_PREFIX_DEFAULT("\$(DODS_ROOT)")

DODS_GET_DODS_ROOT
DODS_DIRECTORY_VERSION

DODS_SERVER_VERSION=\"nc-dods/$VERSION\"
AC_DEFINE_UNQUOTED(DODS_SERVER_VERSION, $DODS_SERVER_VERSION)

dnl `depend' is the command to use to generate dependencies for Makefiles.

depend=${dods_relative}etc/depend.sh
AC_SUBST(depend)

# Until further notice OS X port doesn't get -gstabs because of an
# apparent bug in their gcc 3.3 clone (a beta).  If you see this after
# 1/1/2005, you can probably remove it.  Much earlier probably.
case "${host_cpu}:${host_vendor}:${host_os}" in
     powerpc:apple:netbsd*)       
       CFLAGS=${CFLAGS-"-O2 $CFLAGS"}
       CXXFLAGS=${CXXFLAGS-"-O2 $CXXFLAGS"}
       break;;
     alphaev56:dec:osf5.*)       
       CFLAGS=${CFLAGS-"-O2 $CFLAGS"}
       CXXFLAGS=${CXXFLAGS-"-O2 $CXXFLAGS"}
       break;;
    *:*:*)
       CFLAGS=${CFLAGS-"-gstabs -O2 $CFLAGS"}
       CXXFLAGS=${CXXFLAGS-"-gstabs -O2 $CXXFLAGS"}
       break;;
esac


CFLAGS=${CFLAGS-"-gstabs -O2 $CFLAGS"}
CXXFLAGS=${CXXFLAGS-"-gstabs -O2 $CXXFLAGS"}

dnl Checks for programs.

AC_PROG_AWK
AC_PROG_CC
AC_PROG_CXX
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_RANLIB
AC_PROG_CPP
AC_PROG_INSTALL
AC_CHECK_PROGS(M4, $M4 m4, )

UD_PROG_FC
UD_CHECK_LIB_MATH

DODS_PROG_PERL
DODS_PROG_GTAR
DODS_GCC

DODS_OS
DODS_MACHINE
if test "$OS" = ultrix && test "$MACHINE" = vax; then
    case "$CC" in
        /bin/cc*|cc*)
echo "changing C compiler to \`vcc' because \`cc' floating-point is broken"
            CC=vcc
            ;;
    esac
fi

CXX=${CXX-g++}
AC_MSG_RESULT(Setting CXX to $CXX)
AC_SUBST(CXX)

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h limits.h unistd.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_OFF_T
AC_TYPE_SIZE_T
AC_CHECK_TYPE(ssize_t, int)
AC_CHECK_TYPE(ptrdiff_t, int)
AC_CHECK_TYPE(uchar, unsigned char)
AC_C_CHAR_UNSIGNED
AC_C_BIGENDIAN
UD_CHECK_IEEE

dnl Checks for specific libraries
AC_CHECK_LIB(pthread, pthread_testcancel, 
	[LIBS="$LIBS -lpthread"
	 AC_DEFINE(_REENTRANT)])

dnl Checks for library functions.
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(strerror strtol)

DODS_CHECK_SIZES
UD_CHECK_SIZEOF(off_t)
UD_CHECK_SIZEOF(size_t)

DODS_RX_LIB
DODS_WWW_LIB
DODS_COMPRESSION_LIB
DODS_XML_LIB

DODS_EFENCE
DODS_DBNEW
DODS_DEBUG_OPTION

dnl ---------------------------------------------------------------------
dnl Find GDAL.
dnl ---------------------------------------------------------------------

AC_ARG_WITH(gdal,[  --with-gdal[=PATH]        Include GDAL support (PATH is path to gdal-config)],,)

if test "$with_gdal" = "yes" -o "$with_gdal" = "" ; then

  AC_PATH_PROG(GDAL_CONFIG, gdal-config, no)

  if test "$GDAL_CONFIG" = "no" ; then
    AC_MSG_ERROR([couldn't find gdal-config])
  fi

else

  if test "$with_gdal" = "no" ; then
    AC_MSG_ERROR([--with-gdal is not optional.]);
  fi

  if test "`basename xx/$with_gdal`" = "gdal-config" ; then
    GDAL_CONFIG="$with_gdal"
  else
    AC_MSG_ERROR([--with-gdal argument should be 'yes' or path to gdal-config script])
  fi
fi

GDAL_LIB=`$GDAL_CONFIG --libs`
GDAL_INC=`$GDAL_CONFIG --cflags`

AC_SUBST(GDAL_INC, $GDAL_INC)
AC_SUBST(GDAL_LIB, $GDAL_LIB)

dnl See call to UD_CONFIG_HEADER at top for why UD_OUTPUT is used in place
dnl of AC_OUTPUT. 1/25/2000 jhrg

dnl UD_OUTPUT(Makefile)
dnl 
dnl The UD_OUTPUT macro is no longer used because it doesn't work with the 
dnl newer vesions of autoconf. AC_OUTPUT does OK with these files (see also
dnl at the top of this file...) 02/09/04 jhrg

AC_OUTPUT(Makefile)
