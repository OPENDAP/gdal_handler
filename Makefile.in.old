
# $Id$

@SET_MAKE@

# Set makefile variables, some with values supplid by configure 
# DEFS gets the `-D' defines that describe what a particular system has
# or doesn't have.

PROG = gdal_handler
DODS_ROOT = @dods_relative@

INCS = $(GDAL_INC) @INCS@
DEFS = -DLOCAL @DEFS@
CPPFLAGS = @CPPFLAGS@ $(DEFS) $(INCS)
CFLAGS = @CFLAGS@
CXXFLAGS_DEBUG = -g3 -O0 -Wall -fno-default-inline -fno-defer-pop
CXXFLAGS = @CXXFLAGS@
TEST_COV_FLAGS = -ftest-coverage -fprofile-arcs
TAGS_FLAGS = -i ../dap/TAGS

# Make sure that the core software libraries just built can be found without
# first running make install, but that if `make install' and `make clean' has
# been run those libraries will be found in the `lib' directory.
LDFLAGS = @LDFLAGS@
LFLAGS=-8
YFLAGS=-d
GDALDODS = @GDAL_LIB@ -ldap++ -lnc-dods -ldap++
LIBS = @LIBS@

# Set the instalation directories; prefix can be set on the command line
# during Makefile construction with `./configure --prefix /my/choice'

prefix = @prefix@
exec_prefix = $(prefix)
bindir = $(exec_prefix)bin
libdir = $(exec_prefix)lib
includedir = $(prefix)include
manext = 1
mandir = $(prefix)man/man$(manext)

src = $(DODS_ROOT)src
etcdir = $(DODS_ROOT)etc

INSTALLMAN = man

SHELL = /bin/sh
srcdir = @srcdir@
version = @VERSION@
basedir = nc3-dods
dir = $(basedir)-$(version)
host = @host@

COMPONENT_NAME = DODS GDAL Server
AWK = @AWK@
TAR = @TAR@
PERL = @PERL@

# testsuite specifics
RUNTEST= runtest
RUNTESTFLAGS= #--all --verbose

# names of key programs

LN_S = @LN_S@
CC = @CC@
CXX = @CXX@
AR = ar
RANLIB = @RANLIB@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
TAGS = etags
STRIP = strip
VPATH = .:lnetcdf

HANDLER_SRCS = gdal_handler.cc gdal_das.cc \
		GDALTypes.cc GDALArray.cc GDALGrid.cc
HANDLER_OBJS = gdal_handler.o gdal_das.o \
		GDALTypes.o GDALArray.o GDALGrid.o 

# Matlab client can be suppressed by a switch to configure.
all: gdal_handler

gdal_handler: $(HANDLER_OBJS)
	$(CXX) $(LDFLAGS) -o gdal_handler $(HANDLER_OBJS) $(GDALDODS) $(LIBS)

# Standard targets with some customization for das-test and dds-test

configure: configure.in $(DODS_ROOT)etc/aclocal.m4
	autoconf --localdir=$(DODS_ROOT)etc

Makefile: Makefile.in
	if [ -x ./config.status ]; \
	then \
	    ${SHELL} ./config.status; \
	else \
	    ./configure; \
	fi

check:
	-(echo No test available for this component)

test-coverage: clean
	echo No coverage test available for this component.

# Note that the gcov options -f and -b are useful but sometimes make looking
# at the results of coverage analysis a little taxing. -b reports on all
# branched and -f reports on all functions. The -l -o options summarize on a
# per-file basis. 3/27/98 jhrg
collect-coverage-data:
	(cd test-coverage; \
         cov_dat="coverage-data-`date +%m.%d.%y`"; \
	 touch $$cov_dat; \
	 for f in $(ALLSRCS); do \
	     echo "\n*** Coverage data for $$f ***\n" >> $$cov_dat; \
	     gcov -l -o ../ $$f >> $$cov_dat; \
         done)

install: gdal_handler
	$(INSTALL_PROGRAM) -s gdal_handler $(etcdir)

# Do not intall in the fortran jackets directory - the jackets are added to
# the library at build time
# cd fortran && $(MAKE) $(MFLAGS) install && cd ..

clean:	
	-rm -f *.o *.sum *.log *~ core
	-rm -f $(PROG) 

distclean:
	-rm -f *.o *.sum *.log *~ core
	-rm -f $(PROG)
	-rm -f config.status config.log config.cache
	-rm -f site.exp config_nc.h lnetcdf/ncconfig.h

.PHONY: depend
depend: 
	@depend@ -m Makefile.in -- $(CPPFLAGS) -- $(HANDLER_SRCS)

.PHONY: tar
tar:
	-rm -f config.cache config.log config.status
	cd $(DODS_ROOT)/.. && \
	$(TAR) --exclude 'old' --exclude '.#*' --exclude 'CVS' \
	    --exclude '.snprj*' --exclude '.flc*' --exclude 'Makefile' \
	    --gzip --create --dereference --file DODS-$(dir).tar.gz \
	    DODS/src/$(dir)

# Creates tar files for binary distributions.
#
.PHONY: binary-tar
binary-tar:
	cd $(DODS_ROOT).. && ( \
        $(TAR) --gzip --create --dereference \
            --file DODS-gdal-server-$(version)-$(host).tar.gz \
            DODS/NEWS DODS/etc/README-security \
            DODS/docs/README DODS/docs/README-gdal-server \
            DODS/etc/gdal_handler; \

.PHONY: update-version
update-version: check-version
	@echo "Version is: `cat version.h`"
	if test ! -d ../$(dir); then mv ../$(basedir)* ../$(dir); fi
	if test ! -f $(DODS_ROOT)VERSION; then touch $(DODS_ROOT)VERSION; fi
	$(etcdir)/update-manifest.pl "$(COMPONENT_NAME)" $(version) \
		< $(DODS_ROOT)VERSION > tmp.dods.manifest
	mv tmp.dods.manifest $(DODS_ROOT)VERSION

# Compare the version encoded in this Makefile (set by configure) with the
# version in version.h. The version make variable is set up near the top of
# the Makefile.
.PHONY: check-version
check-version:
	@echo "Checking for version.h and Makefile version match-up"
	@if [ "$(version)" != "`cat version.h`" ]; \
	then \
		echo "You must manually re-run configure!"; \
		exit 1; \
	else \
		echo "Yes, they match."; \
	fi

.PHONY: tags
tags:
	$(TAGS) $(TAGS_FLAGS) *.cc *.h lnetcdf/*.c lnetcdf/*.h

.SUFFIXES:      .o .cc .c

.c.o:
	$(CC) -c $(CFLAGS) $(CPPFLAGS) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(CPPFLAGS) -o $@ $<

# DO NOT DELETE; depend depends on this line.
